#!/usr/bin/env bash

jaildir=${jaildir:-$1}
as_user=`whoami`

function mount_if_not_mounted() {
    mount | grep -q $1
    if [ $? -eq 0 ] ; then
        echo "$1 is already mounted, not mounting $2 at $1"
    else
        if [[ ${2:0:1} == '/' ]] ; then
            command "sudo mount -o bind $2 $1"
        else
            command "sudo mount -t $2 $2 $1"
        fi
    fi
}

function command() {
    echo "executing: " $*
    $*
}

if [[ -d $jaildir ]] ; then 
    echo "jaildir set to $jaildir, chrooting now as $as_user.";
    mount_if_not_mounted "$jaildir/proc" proc
    mount_if_not_mounted "$jaildir/dev" "/dev"
    mount_if_not_mounted "$jaildir/sys" sysfs
    mount_if_not_mounted "$jaildir/boot" "/boot"

    projects_dir="$jaildir/home/$as_user/projects"
    if [ -d $projects_dir ]; then
        project_dir_mounted=no
        if [ `ls $projects_dir | wc -l` -eq 0 ] ;
        then
            mount_if_not_mounted $projects_dir "/home/$as_user/projects"
            project_dir_mounted=yes
        else 
            echo "not mounting $projects_dir, as it has some files"
        fi
    fi

    command sudo cp /etc/resolv.conf $jaildir/etc/resolv.conf
    #command sudo /bin/bash -c "echo nameserver 8.8.8.8 >> $jaildir/etc/resolv.conf"

    sudo chroot $jaildir su - $as_user
    
    if [ "$project_dir_mounted" = "yes" ] ;
    then
        sudo umount "$jaildir/home/$as_user/projects" -l
    else
        echo "not unmounting $projects_dir, as it was not mounted"
    fi

    sudo umount "$jaildir/sys" -l
    sudo umount "$jaildir/dev" -l
    sudo umount "$jaildir/proc"
    sudo umount "$jaildir/boot"
else
    echo "jaildir must be set, exiting."
fi

